restart;

data := parse(readline("input.txt"));

M :=ImportMatrix("input.txt",datatype=integer,skiplines=1,delimiter=" ");

ListOfRows := seq(M[i],i = 1..op(1,M)[1]);

bingoCards := []:

for i from 0 to op(1,M)[1]/op(1,M)[2] - 1 do: 
bingoCards :=[op( bingoCards),[seq(ListOfRows[op(1,M)[2]*i+j + 1],j=0..4)]]:
od:

bingoCards := map(ArrayTools[Reshape],map(Matrix,bingoCards),5,5):


print(%);


bingoCaller := proc(numbers,cards::list):

bingoCopy := copy(cards,deep);

for i in numbers do:

for k,j in cards do:

if member(i,j) then;

ind := rtable_scanblock(j,[],(val,ind,res) -> `if`(val=i,ind,res),[[1,1],j[1,1]]);

j[op(ind)] := I;

if member(5*I,MTM[sum](j,1)) or member(5*I,MTM[sum](j,2)) then;
return bingoCopy[k],j,i*Re(add(p,p in j));
else end if;  

else end if;
od;
od;

end proc;

bingoCaller([data],bingoCards);
